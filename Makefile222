# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile222                                        :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: lramard <lramard@student42.fr>             +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2018/11/28 15:13:34 by lramard           #+#    #+#              #
#    Updated: 2019/02/07 20:50:42 by lramard          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

SHELL = bash

NAME = ft_printf.h

# Sources names
SRCS_NAME = ft_printf.c \
				ft_parse.c \
				ft_percent.c \
				ft_putstrplus.c \
				ft_error.c \
				ft_convx.c\
				ft_convu.c \
				ft_convpct.c \
				ft_convo.c \
				ft_convmx.c \
				ft_convi.c \
				ft_convert.c \
				ft_convd.c \
				
				ft_structfiller.c \
				ft_structfiller2.c \
				ft_stokpar.c \
				ft_reset.c

# Sources, objects and includes path
SRCS_PATH = ./srcs/
OBJS_PATH = ./objs/
INCS_PATH = ./includes/

# Sources and objects
SRCS = $(addprefix $(SRCS_PATH), $(SRCS_NAME))
OBJS = $(patsubst $(SRCS_PATH)%.c, $(OBJS_PATH)%.o, $(SRCS))

# Compilation
CC = gcc
CFLAGS = -Wall -Wextra -Werror
CPPFLAGS = -I $(INCS_PATH)
LDFLAGS = ./libft/

# Text format
_DEF = $'\033[0m
_GRAS = $'\033[1m
_SOUL = $'\033[4m
_CLIG = $'\033[5m
_SURL = $'\033[7m

# Colors
_BLACK = $'\033[30m
_RED = $'\033[31m
_GREEN = $'\033[32m
_YELLOW = $'\033[33m
_BLUE = $'\033[34m
_PURPLE = $'\033[35m
_CYAN = $'\033[36m
_GREY = $'\033[37m

# Background
_IBLACK = $'\033[40m
_IRED = $'\033[41m
_IGREEN = $'\033[42m
_IYELLOW = $'\033[43m
_IBLUE = $'\033[44m
_IPURPLE = $'\033[45m
_ICYAN = $'\033[46m
_IGREY = $'\033[47m

verif = 0

all: $(NAME)

$(NAME) : $(INC) $(OBJ) $(SRC)
	make -C libft
	gcc $(FLAGS) -c $(SRC) -I$(INC)
	gcc $(FLAGS) -o $(NAME) $(OBJ) libft/libft.a

$(NAME): $(OBJS)
	@ar rcs $(NAME) $(OBJS)
	@make -C libft
	@echo -en "$(_GREEN)\t [OK]$(_DEF)\n\n"
	@echo -en "$(_RED)"
	@echo -en "	        __\n"
	@echo -en "              / _ ) < $(NAME) is ready\n"
	@echo -en "     _.----._/ /\n"
	@echo -en "    /         /\n"
	@echo -en " __/ (  | (  |\n"
	@echo -en "/__.-'|_|--|_|\n"
	@echo -en " $(_DEF)\n\n"

$(OBJS_PATH)%.o: $(SRCS_PATH)%.c
	@if [[ $(verif) -eq 0 ]]; then sh ./rex ;\
	else printf "\e[1A"; fi
	$(eval FNCT = $(words $(SRCS)))
	$(eval verif = $(shell echo $(verif) + 1 | bc ))
	$(eval PCR = $(shell echo "$(verif) / $(FNCT) * 100" | bc -l))
	@printf " \n$(_GREEN)[%3d%%]\t$(_DEF)%-30s $(_DEF) -> \t$(_GREEN) %-30s$(_DEF)" $(shell echo $(PCR) | sed -E "s:\.[0-9]{20}::") $< $@
	@mkdir -p objs
	@printf "$(_DEF)"
	@$(CC) $(CFLAGS) $(CPPFLAGS) -o $@ -c $<

clean:
	@echo
	@rm -rf $(OBJS_PATH) 2> /dev/null || true
	@make clean -C libft
	@echo -e "$(_YELLOW)Remove :\t$(_RED)" $(LDFLAGS)objs/
	@echo

fclean:
	@echo
	@rm -rf $(OBJS_PATH) 2> /dev/null || true
	@rm -f $(NAME)
	@rm -f libft/libft.a
	@echo -e "$(_YELLOW)Remove :\t$(_RED)" $(LDFLAGS)objs/
	@echo -e "$(_YELLOW)Remove :\t$(_RED)" $(LDFLAGS)$(NAME)
	@echo

re: fclean all

norme:
	@echo -ne "$(_GREEN)"
	@norminette $(SRCS_PATH)
	@norminette $(INCS_PATH)
	@echo -ne "$(_DEF)"

.PHONY: all clean fclean re norme
